git  diff           比较工作区和暂存区的区别
git  diff head      比较工作区和版本库的区别
git  diff  --cached 比较暂存区和版本库的区别
要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git
关联后，使用命令git push -u origin master第一次推送master分支的所有内容
$ git merge dev 合并dev分支到当前分支
$ git branch -d "name"
$ git branch -D "name" 强行删除分支
$ git merge --no-ff -m "merge with no-ff" dev  合并dev分支到当前分支，禁用Fast  forward
Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作
$ git stash   (list)查看stash
一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；
另一种方式是用git stash pop，恢复的同时把stash内容也删了
多次stash之后$ git stash apply stash@{0}
推送分支$ git push origin （分支名字）
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name
git tag 查看所有标签
git tag （name） 就可以打一个新标签
$ git log --pretty=oneline --abbrev-commit 查看log
$ git tag v0.9 commiteid 给指定的commitid打标签
$ git tag -a v0.1 -m "version 0.1 released" commitid  还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字
$ git tag -d v0.1 删除标签
$ git push origin v1.0 推送标签到远程
$ git push origin --tags 推送所有标签
删除远程标签的步骤，先删除本地标签，再执行：$ git push origin :refs/tags/v0.9
